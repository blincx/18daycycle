DEBUG:root:get_args returned: birfdae=1984-07-28 json_flag=False
DEBUG:root:received date: 1984-07-28
DEBUG:root:cycle_up returned 2020-02-08 00:00:00
DEBUG:root:calling build_final_cycles_calendar_data
DEBUG:root:returned vars: today=7;
calendar_data=[(2020, 2, 8, 1), (2020, 2, 9, 2), (2020, 2, 10, 3), (2020, 2, 11, 4), (2020, 2, 12, 5), (2020, 2, 13, 6), (2020, 2, 14, 7), (2020, 2, 15, 8), (2020, 2, 16, 9), (2020, 2, 17, 10), (2020, 2, 18, 11), (2020, 2, 19, 12), (2020, 2, 20, 13), (2020, 2, 21, 14), (2020, 2, 22, 15), (2020, 2, 23, 16), (2020, 2, 24, 17), (2020, 2, 25, 18), (2020, 2, 26, 1), (2020, 2, 27, 2), (2020, 2, 28, 3), (2020, 2, 29, 4), (2020, 3, 1, 5), (2020, 3, 2, 6), (2020, 3, 3, 7), (2020, 3, 4, 8), (2020, 3, 5, 9), (2020, 3, 6, 10), (2020, 3, 7, 11), (2020, 3, 8, 12), (2020, 3, 9, 13), (2020, 3, 10, 14), (2020, 3, 11, 15), (2020, 3, 12, 16), (2020, 3, 13, 17), (2020, 3, 14, 18), (2020, 3, 15, 1), (2020, 3, 16, 2), (2020, 3, 17, 3), (2020, 3, 18, 4), (2020, 3, 19, 5), (2020, 3, 20, 6), (2020, 3, 21, 7), (2020, 3, 22, 8), (2020, 3, 23, 9), (2020, 3, 24, 10), (2020, 3, 25, 11), (2020, 3, 26, 12), (2020, 3, 27, 13), (2020, 3, 28, 14), (2020, 3, 29, 15), (2020, 3, 30, 16), (2020, 3, 31, 17), (2020, 4, 1, 18), (2020, 4, 2, 1), (2020, 4, 3, 2), (2020, 4, 4, 3)];
INFO:root:script called with args: ['18daycycle.py']; birthday=1984-07-28; json_flag=False; startdate=1984-07-28 00:00:00; first_day_1_last_month=2020-02-08 00:00:00; today=7;
ERROR:root:Wench apocalypse! simple_loop_method fluxxed up the date!
ERROR:root:Wench apocalypse! simple_loop_method fluxxed up the date!
ERROR:root:Wench apocalypse! simple_loop_method fluxxed up the date!
ERROR:root:simple_loop_method failed
2020-03-28 17:48:31,275 get_args returned: birfdae=1987-02-03 json_flag=False
2020-03-28 17:48:31,292 simple_loop_method returned: 2020/03/28, 12
2020-03-28 17:48:31,292 simple_subtraction_method returned: 12
2020-03-28 17:48:31,292 returned vars: today=2020-03-28 00:00:00;
daydata=[('March 28', 12), ('March 29', 13), ('March 30', 14), ('March 31', 15), ('April 01', 16), ('April 02', 17), ('April 03', 18), ('April 04', 1), ('April 05', 2), ('April 06', 3), ('April 07', 4)];
2020-03-28 17:48:31,292 script called with args: ['18daycycle.py', '1987-02-03']; birthday=1987-02-03 00:00:00; json_flag=False; today=2020-03-28 00:00:00;
2020-03-28 17:48:31,292 resulting output: cycle_day=12 daydata=[('March 28', 12), ('March 29', 13), ('March 30', 14), ('March 31', 15), ('April 01', 16), ('April 02', 17), ('April 03', 18), ('April 04', 1), ('April 05', 2), ('April 06', 3), ('April 07', 4)]
2020-03-28 17:50:22,765 get_args returned: birfdae=1987-02-03 json_flag=False
2020-03-28 17:50:22,783 simple_loop_method returned: 2020/03/28, 12
2020-03-28 17:50:22,783 simple_subtraction_method returned: 12
2020-03-28 17:50:22,783 returned vars: today=2020-03-28 00:00:00;
daydata=[('March 28', 12), ('March 29', 13), ('March 30', 14), ('March 31', 15), ('April 01', 16), ('April 02', 17), ('April 03', 18), ('April 04', 1), ('April 05', 2), ('April 06', 3), ('April 07', 4)];
2020-03-28 17:50:22,783 script called with args: ['18daycycle.py', '1987-02-03', 'debug']; birthday=1987-02-03 00:00:00; json_flag=False; today=2020-03-28 00:00:00;
2020-03-28 17:50:22,783 resulting output: cycle_day=12 daydata=[('March 28', 12), ('March 29', 13), ('March 30', 14), ('March 31', 15), ('April 01', 16), ('April 02', 17), ('April 03', 18), ('April 04', 1), ('April 05', 2), ('April 06', 3), ('April 07', 4)]
2020-03-28 17:50:58,338 get_args returned: birfdae=1987-02-03 json_flag=False
2020-03-28 17:50:58,355 simple_loop_method returned: 2020/03/28, 12
2020-03-28 17:50:58,355 simple_subtraction_method returned: 12
2020-03-28 17:50:58,355 returned vars: today=2020-03-28 00:00:00;
daydata=[('March 28', 12), ('March 29', 13), ('March 30', 14), ('March 31', 15), ('April 01', 16), ('April 02', 17), ('April 03', 18), ('April 04', 1), ('April 05', 2), ('April 06', 3), ('April 07', 4)];
2020-03-28 17:50:58,355 script called with args: ['18daycycle.py', '1987-02-03', 'debug']; birthday=1987-02-03 00:00:00; json_flag=False; today=2020-03-28 00:00:00;
2020-03-28 17:50:58,356 resulting output: cycle_day=12 daydata=[('March 28', 12), ('March 29', 13), ('March 30', 14), ('March 31', 15), ('April 01', 16), ('April 02', 17), ('April 03', 18), ('April 04', 1), ('April 05', 2), ('April 06', 3), ('April 07', 4)]
2020-03-28 17:52:48,399 get_args returned: birfdae=debug json_flag=False
2020-03-28 17:53:40,391 get_args returned: birfdae=debug json_flag=False
2020-03-28 17:54:05,766 get_args returned: birfdae=1929-08-23 json_flag=False
2020-03-28 17:54:05,799 simple_loop_method returned: 2020/03/28, 7
2020-03-28 17:54:05,799 simple_subtraction_method returned: 7
2020-03-28 17:54:05,799 returned vars: today=2020-03-28 00:00:00;
daydata=[('March 28', 7), ('March 29', 8), ('March 30', 9), ('March 31', 10), ('April 01', 11), ('April 02', 12), ('April 03', 13), ('April 04', 14), ('April 05', 15), ('April 06', 16), ('April 07', 17)];
2020-03-28 17:54:05,799 script called with args: ['18daycycle.py', '1929-08-23', 'debug']; birthday=1929-08-23 00:00:00; json_flag=False; today=2020-03-28 00:00:00;
2020-03-28 17:54:05,799 resulting output: cycle_day=7 daydata=[('March 28', 7), ('March 29', 8), ('March 30', 9), ('March 31', 10), ('April 01', 11), ('April 02', 12), ('April 03', 13), ('April 04', 14), ('April 05', 15), ('April 06', 16), ('April 07', 17)]
2020-03-28 17:54:08,844 get_args returned: birfdae=None json_flag=None
2020-03-28 17:54:14,020 get_args returned: birfdae=None json_flag=None
2020-03-28 17:55:09,482 get_args returned: birfdae=1929-08-23 json_flag=False
2020-03-28 17:55:09,517 simple_loop_method returned: 2020/03/28, 7
2020-03-28 17:55:09,517 simple_subtraction_method returned: 7
2020-03-28 17:55:09,517 returned vars: today=2020-03-28 00:00:00;
daydata=[('March 28', 7), ('March 29', 8), ('March 30', 9), ('March 31', 10), ('April 01', 11), ('April 02', 12), ('April 03', 13), ('April 04', 14), ('April 05', 15), ('April 06', 16), ('April 07', 17)];
2020-03-28 17:55:09,518 script called with args: ['18daycycle.py', '1929-08-23', 'debug']; birthday=1929-08-23 00:00:00; json_flag=False; today=2020-03-28 00:00:00;
2020-03-28 17:55:09,518 resulting output: cycle_day=7 daydata=[('March 28', 7), ('March 29', 8), ('March 30', 9), ('March 31', 10), ('April 01', 11), ('April 02', 12), ('April 03', 13), ('April 04', 14), ('April 05', 15), ('April 06', 16), ('April 07', 17)]
2020-03-28 17:55:27,586 get_args returned: birfdae=1929-08-23 json_flag=False
2020-03-28 17:55:27,617 simple_loop_method returned: 2020/03/28, 7
2020-03-28 17:55:27,617 simple_subtraction_method returned: 7
2020-03-28 17:55:27,618 returned vars: today=2020-03-28 00:00:00;
daydata=[('March 28', 7), ('March 29', 8), ('March 30', 9), ('March 31', 10), ('April 01', 11), ('April 02', 12), ('April 03', 13), ('April 04', 14), ('April 05', 15), ('April 06', 16), ('April 07', 17)];
2020-03-28 17:55:27,618 script called with args: ['18daycycle.py', '1929-08-23']; birthday=1929-08-23 00:00:00; json_flag=False; today=2020-03-28 00:00:00;
2020-03-28 17:55:27,618 resulting output: cycle_day=7 daydata=[('March 28', 7), ('March 29', 8), ('March 30', 9), ('March 31', 10), ('April 01', 11), ('April 02', 12), ('April 03', 13), ('April 04', 14), ('April 05', 15), ('April 06', 16), ('April 07', 17)]
392392
392392
392392
